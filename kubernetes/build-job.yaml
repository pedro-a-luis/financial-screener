apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dockerfile-pvc
  namespace: financial-screener
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile
  namespace: financial-screener
data:
  Dockerfile: |
    # Dockerfile for Analyzer Service (Celery + Polars)
    # Optimized for ARM64 (Raspberry Pi)

    FROM python:3.11-slim-bookworm

    # Set working directory
    WORKDIR /app

    # Install system dependencies
    RUN apt-get update && apt-get install -y \
        --no-install-recommends \
        gcc \
        g++ \
        libpq-dev \
        && rm -rf /var/lib/apt/lists/*

    # Copy requirements
    COPY services/analyzer/requirements.txt .

    # Install Python dependencies
    RUN pip install --no-cache-dir -r requirements.txt

    # Copy shared models from parent project
    COPY shared/models/ ./shared/models/

    # Copy application code
    COPY services/analyzer/src/ ./src/
    COPY services/analyzer/tests/ ./tests/

    # Add src to PYTHONPATH
    ENV PYTHONPATH=/app/src:$PYTHONPATH

    # Create non-root user
    RUN useradd -m -u 1000 appuser && \
        chown -R appuser:appuser /app

    USER appuser

    # Health check
    HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
      CMD python -c "import sys; from celery_app import app; sys.exit(0 if app else 1)"

    # Default command (will be overridden by K8s)
    CMD ["celery", "-A", "celery_app", "worker", "--loglevel=info"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: build-analyzer-image
  namespace: financial-screener
spec:
  ttlSecondsAfterFinished: 600
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        args:
          - "--dockerfile=/workspace/Dockerfile"
          - "--context=dir:///workspace"
          - "--destination=financial-analyzer:latest"
          - "--tar-path=/workspace/image.tar"
          - "--no-push"
        volumeMounts:
          - name: dockerfile
            mountPath: /workspace/Dockerfile
            subPath: Dockerfile
          - name: source
            mountPath: /workspace
      volumes:
        - name: dockerfile
          configMap:
            name: dockerfile
        - name: source
          hostPath:
            path: /home/admin/financial-screener
            type: Directory
